// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`components/Dropdown > should render the Header Component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="relative card-className"
      >
        <div
          aria-controls="dropdown-listbox"
          aria-expanded="false"
          aria-haspopup="dropdown-listbox"
          class="hover:cursor-pointer rounded-full px-4 py-2 border border-gray-800 dark:border-gray-200 hover:bg-gray-800/20 hover:dark:bg-gray-200/20"
          id="dropdown"
          role="combobox"
          tabindex="0"
        >
          <p
            class="text-gray-900 dark:text-gray-100 flex gap-2 items-center text-sm"
          >
            <span
              class="hidden sm:inline-flex"
            >
              Option 1
            </span>
            <svg
              class="ml-2 w-3 h-3"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              stroke-width="0"
              viewBox="0 0 512 512"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
              />
            </svg>
          </p>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="relative card-className"
    >
      <div
        aria-controls="dropdown-listbox"
        aria-expanded="false"
        aria-haspopup="dropdown-listbox"
        class="hover:cursor-pointer rounded-full px-4 py-2 border border-gray-800 dark:border-gray-200 hover:bg-gray-800/20 hover:dark:bg-gray-200/20"
        id="dropdown"
        role="combobox"
        tabindex="0"
      >
        <p
          class="text-gray-900 dark:text-gray-100 flex gap-2 items-center text-sm"
        >
          <span
            class="hidden sm:inline-flex"
          >
            Option 1
          </span>
          <svg
            class="ml-2 w-3 h-3"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 512 512"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
            />
          </svg>
        </p>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
